
package ci;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionListener;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.TreeMap;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JPanel;

/**
 *
 * @author peter
 */
public class DataViewFrame extends javax.swing.JInternalFrame{
    public JPanel panel;
    FileListIFrame fFrame;
    DataViewIFrame dFrame;
    GraphIFrame gFrame;
    public Image iconImage;
    public TreeMap reusableTM=new TreeMap();
    public boolean dMax=false,gMax=false,changeFile=false;
    public String dataDir="";
    public String dataTitle[]=null;
    public TreeMap[] dataStrTM=null,dataDTM=null;
    public int cellColor[][]=null;
    public String version="1.01";
    public SimpleDateFormat format4=new SimpleDateFormat("yyyy/MM/dd HH:mm:ss"),format3=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss"),
            format2=new SimpleDateFormat("yyyy/MM/dd HH:mm"),format1=new SimpleDateFormat("yyyy-MM-dd HH:mm");
    public int nextColorInx=1;
    public Color[] colorSequence={Color.white,Color.blue,Color.red,new Color(0x0,0x64,0x0),new Color(0xff,0x14,0x93),
        new Color(0xa5,0x2a,0x2a),new Color(0x5f,0x9e,0xa0),new Color(0x8b,0x00,0x8b),new Color(0x69,0x69,0x69),
        new Color(0xd2,0xb4,0x8c)};
    public Color columnColor[]={};
    public long columnOneVar[]={};
    public CrInstrument instrument;
    public DataViewFrame(CrInstrument instrument) {
        initComponents();
        this.instrument=instrument;

        panel=new JPanel();
        panel.setLayout(null);
        fFrame = new FileListIFrame(this);
        fFrame.setVisible(true); 
        panel.add(fFrame);
        dFrame = new DataViewIFrame(this);
        dFrame.setVisible(true);
        panel.add(dFrame);
        gFrame = new GraphIFrame(this);
        gFrame.setVisible(true); 
        panel.add(gFrame);

        setContentPane(panel);

        setVisible(true);
        setTitle("History data viewer");
    }
   public static final Pattern Num_PATTERN= Pattern.compile("^-?[0-9]+(\\.[0-9]+)?$");
    public static boolean isNumeric(String s){
          return (s==null? false: Num_PATTERN.matcher(s).matches());
    }
public void setDataDir(String dd){
    this.dataDir=dd;
    if(new File(dataDir).exists()) {
      setTitle("Data directory: "+new File(dataDir).getAbsolutePath());
      fFrame.getFileList();
    }

}
public void doLayout(){
    super.doLayout();
    int w=panel.getWidth();
    int h=panel.getHeight();
    fFrame.setBounds(0, 0, (int)(((double)w)*0.15), h);

    if(dMax){
      dFrame.setBounds((int)(((double)w)*0.15), 0, (int)(((double)w)*0.85), h);

      dFrame.setVisible(true);
      gFrame.setVisible(false);
    } else if(gMax){

      gFrame.setBounds((int)(((double)w)*0.15), 0, (int)(((double)w)*0.85), h);
      dFrame.setVisible(false);
      gFrame.setVisible(true);
      gFrame.revalidate();
    } else {
      dFrame.setBounds((int)(((double)w)*0.15), 0, (int)(((double)w)*0.351), h);
      gFrame.setBounds((int)(((double)w)*0.5), 0, (int)(((double)w)*0.5), h);
      dFrame.setVisible(true);
      gFrame.setVisible(true);
      gFrame.revalidate();
    }

}

public TreeMap getReusableTM(int inx){
   TreeMap tm=null;
   if(reusableTM.size()>inx){
       tm=(TreeMap)reusableTM.get(""+inx);
       tm.clear();
   } else {
       tm=new TreeMap();

   }
   reusableTM.put(""+inx, tm);
   return tm;
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 394, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 274, Short.MAX_VALUE)
        );

        pack();
    }

}